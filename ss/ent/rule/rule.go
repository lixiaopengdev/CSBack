// Code generated by ent, DO NOT EDIT.

package rule

import (
	"time"
)

const (
	// Label holds the string label denoting the rule type in the database.
	Label = "rule"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeUsed holds the string denoting the used edge name in mutations.
	EdgeUsed = "used"
	// Table holds the table name of the rule in the database.
	Table = "rules"
	// UsedTable is the table that holds the used relation/edge. The primary key declared below.
	UsedTable = "card_rule"
	// UsedInverseTable is the table name for the Card entity.
	// It exists in this package in order to avoid circular dependency with the "card" package.
	UsedInverseTable = "cards"
)

// Columns holds all SQL columns for rule fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldName,
}

var (
	// UsedPrimaryKey and UsedColumn2 are the table columns denoting the
	// primary key for the used relation (M2M).
	UsedPrimaryKey = []string{"card_id", "rule_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
)
